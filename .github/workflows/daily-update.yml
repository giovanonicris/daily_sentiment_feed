name: Daily Sentiment Update

on:
  schedule:
    - cron: '0 7 * * *'  # runs at 7am UTC (3am EST)
  workflow_dispatch:
    inputs:
      run_job:
        description: 'Which job to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - enterprise
          - emerging

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-py3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install lxml[html_clean] git+https://github.com/AndyTheFactory/newspaper4k vaderSentiment googlenewsdecoder

      - name: Set job matrix
        id: set-matrix
        run: |
          if [[ "${{ github.event.inputs.run_job }}" == "all" ]]; then
            echo "matrix=[enterprise,emerging]" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.run_job }}" == "enterprise" ]]; then
            echo "matrix=[enterprise]" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.run_job }}" == "emerging" ]]; then
            echo "matrix=[emerging]" >> $GITHUB_OUTPUT
          else
            echo "matrix=[enterprise,emerging]" >> $GITHUB_OUTPUT
          fi

  process-data:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_type: ${{ fromJson(needs.setup.outputs.matrix) }}
    if: ${{ github.event.inputs.run_job == 'all' || github.event.inputs.run_job == matrix.job_type || github.event.inputs.run_job == '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-py3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install lxml[html_clean] git+https://github.com/AndyTheFactory/newspaper4k vaderSentiment googlenewsdecoder

      - name: Run ${{ matrix.job_type }} sentiment processor
        env:
          DEBUG_MODE: false
          MAX_ARTICLES_PER_TERM: 20
          MAX_SEARCH_TERMS: None
        run: |
          python ${{ matrix.job_type }}RiskNews.py

      - name: Check CSV size
        run: |
          file="output/${{ matrix.job_type }}_risks_online_sentiment.csv"
          if [ -f "$file" ]; then
            size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file")
            if [ $size -gt 90000000 ]; then
              echo "Error: $file exceeds 90MB ($size bytes)"
              exit 1
            fi
            echo "${{ matrix.job_type }} CSV size: $size bytes"
          else
            echo "No ${{ matrix.job_type }} CSV found"
          fi

      - name: Compress CSV
        run: |
          file="output/${{ matrix.job_type }}_risks_online_sentiment.csv"
          if [ -f "$file" ]; then
            gzip "$file"
          else
            echo "No ${{ matrix.job_type }} CSV to compress"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job_type }}-data
          path: output/${{ matrix.job_type }}_risks_online_sentiment.csv.gz

  publish-data:
    needs: process-data
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: main

      - name: Download enterprise artifact
        if: contains(needs.process-data.result, 'enterprise') || contains(needs.process-data.result, 'success')
        uses: actions/download-artifact@v4
        with:
          name: enterprise-data
          path: output/

      - name: Download emerging artifact
        if: contains(needs.process-data.result, 'emerging') || contains(needs.process-data.result, 'success')
        uses: actions/download-artifact@v4
        with:
          name: emerging-data
          path: output/

      - name: Decompress and commit CSVs
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git checkout main
          mkdir -p output
          
          # Decompress files if they exist
          for file in output/*.csv.gz; do
            if [ -f "$file" ]; then
              gunzip -c "$file" > "${file%.gz}"
              rm "$file"
            fi
          done
          
          # Add and commit changes
          git add output/*.csv
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update sentiment data - $(date +%Y-%m-%d)"
            git push
          fi
